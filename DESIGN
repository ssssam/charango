Charango 0.3.0 - design
------------------------

Charango is essentially an RDF-based data model & view. Here are some of the
key design decisions.

Context:
	* Stores all known ontology data so that we can index it. Addressing
	  ontology resources by integer id's is vital when querying tens of
	  thousands of resources to build a view.
	  
	* Ontologies cannot change during execution. Charango is for desktop
	  applications and ontologies are essentially API, which does not normally
	  change during runtime.

	* Ontology info can only be read from disk. This is probably necessary for
	  applications to provide any stability guarantees. In practice apps should
	  ship their required ontologies or depend on Tracker's.


Terminology I currently use
---------------------------

How to do describe what is basically an object or entry?
So a 'resource' - is an rdf:
rdf:Instance: instance of a Class ..

so we either want to call it Instance, or Resource ..

an Instance of an rdfs:Class.

How about namespace is a uri string while ontology is a Charango.Ontology object.

Ontology sources
----------------

How easy is it to add new ontologies to Tracker?

Tracker run-time extension of ontologies is PLANNED:
  http://www.mail-archive.com/tracker-list@gnome.org/msg05852.html
but currently only possible at install-time. I guess when Charango connects to
Tracker it needs to check if all ontologies are available then, and in future
it would be able to add them at runtime. Of course getting Music Ontology
included would be cool but not sure if they will do this :) If not, Calliope
will be able to install it itself at least.
